{
    "document": {
      "title": "Open API - Documentation Payment Gateway Plugin - Service v1.0.0",
      "organization": "DANA INDONESIA",
      "version": "1.0.0",
      "change_log": {
        "table": [
          {
            "date": "March 27, 2024",
            "version": "1.0.0",
            "description": "Initial Document"
          }
        ]
      },
      "table_of_contents": {
        "sections": [
          {"title": "Change Log", "page": 2},
          {"title": "Table of Content", "page": 3},
          {"title": "1 Getting Started", "page": 5, "subsections": [
            {"title": "1.1 Background", "page": 5},
            {"title": "1.2 Goals", "page": 5},
            {"title": "1.3 Glossary", "page": 5}
          ]},
          {"title": "2 Payment Gateway Plugin - Service", "page": 6, "subsections": [
            {"title": "2.1 Overview", "page": 6},
            {"title": "2.2 Flow Process", "page": 6, "subsections": [
              {"title": "2.2.1 Use Case Diagram", "page": 6},
              {"title": "2.2.2 Sequence Diagram", "page": 7, "subsections": [
                {"title": "2.2.2.1 Payment", "page": 7}
              ]}
            ]},
            {"title": "2.3 UI Flow", "page": 9, "subsections": [
              {"title": "2.3.1 VA Flow", "page": 9}
            ]},
            {"title": "2.4 Data Model", "page": 16, "subsections": [
              {"title": "2.4.1 Money", "page": 16},
              {"title": "2.4.2 urlParams", "page": 16}
            ]},
            {"title": "2.5 Enum", "page": 17, "subsections": [
              {"title": "2.5.1 OrderTerminalTypeEnum", "page": 17},
              {"title": "2.5.2 PayMethodEnum", "page": 17},
              {"title": "2.5.3 ScenarioEnum", "page": 18},
              {"title": "2.5.4 SourcePlatformEnum", "page": 18},
              {"title": "2.5.5 TerminalTypeEnum", "page": 18}
            ]},
            {"title": "2.6 Signature Generation & Validation", "page": 19, "subsections": [
              {"title": "2.6.1 Symmetric with B2B Access Token (HMAC_SHAS12)", "page": 19, "subsections": [
                {"title": "2.6.1.1 Digital Signature Generation", "page": 19},
                {"title": "2.6.1.2 Digital Signature Validation", "page": 19}
              ]},
              {"title": "2.6.2 Asymmetric without Access Token (SHA256withRSA)", "page": 20, "subsections": [
                {"title": "2.6.2.1 Asymmetric Key Generation", "page": 20},
                {"title": "2.6.2.2 Digital Signature Generation", "page": 20},
                {"title": "2.6.2.3 Digital Signature Validation", "page": 20}
              ]}
            ]},
            {"title": "2.7 Settlement", "page": 21}
          ]},
          {"title": "3 Payment Redirect", "page": 21, "subsections": [
            {"title": "3.1 Specification", "page": 21},
            {"title": "3.2 Idempotent Key and Rule", "page": 21},
            {"title": "3.3 Request", "page": 22, "subsections": [
              {"title": "3.3.1 Request Parameter", "page": 22, "subsections": [
                {"title": "3.3.1.1 Header", "page": 22},
                {"title": "3.3.1.2 Body", "page": 23}
              ]},
              {"title": "3.3.2 Request Sample", "page": 27}
            ]},
            {"title": "3.4 Response", "page": 30, "subsections": [
              {"title": "3.4.1 Response Parameter", "page": 30, "subsections": [
                {"title": "3.4.1.1 Header", "page": 30},
                {"title": "3.4.1.2 Body", "page": 31}
              ]},
              {"title": "3.4.2 Response Sample", "page": 31}
            ]},
            {"title": "3.5 Response Code and Message", "page": 31}
          ]},
          {"title": "4 Finish Notify", "page": 34, "subsections": [
            {"title": "4.1 Specification", "page": 34},
            {"title": "4.2 Request", "page": 35, "subsections": [
              {"title": "4.2.1 Request Parameter", "page": 35, "subsections": [
                {"title": "4.2.1.1 Header", "page": 35},
                {"title": "4.2.1.2 Body", "page": 36}
              ]},
              {"title": "4.2.2 Request Sample", "page": 39}
            ]},
            {"title": "4.3 Response", "page": 41, "subsections": [
              {"title": "4.3.1 Response Parameter", "page": 41, "subsections": [
                {"title": "4.3.1.1 Header", "page": 41},
                {"title": "4.3.1.2 Body", "page": 41}
              ]},
              {"title": "4.3.2 Response Sample", "page": 42}
            ]},
            {"title": "4.4 Response Code and Message", "page": 42}
          ]},
          {"title": "5 Attachment", "page": 43}
        ]
      },
      "sections": {
        "1_getting_started": {
          "1.1_background": {
            "text": "DANA Indonesia is a technology financial company, which builds a financial services platform that can be used by all people in Indonesia. Currently, DANA Indonesia aims to provide the best financial services which bring benefits to all DANA users and partners by integrating with partners via API. This service is introduces DANA as a payment gateway. It provides a plugin with page view and checkout URL for integration into merchant's platform. DANA will create and process the transaction or order for the merchant's."
          },
          "1.2_goals": {
            "goals": [
              "Provide detailed information about the Payment Gateway Plugin service implemented in DANA Indonesia.",
              "Facilitate to find out the details of the process in the Payment Gateway Plugin service."
            ]
          },
          "1.3_glossary": {
            "table": [
              {"no": 1, "name": "API", "description": "Application Programming Interface"},
              {"no": 2, "name": "HTTP", "description": "Hypertext Transfer Protocol"},
              {"no": 3, "name": "HTTPS", "description": "Hypertext Transfer Protocol Secure"},
              {"no": 4, "name": "OTC", "description": "Over The Counter"},
              {"no": 5, "name": "OTT", "description": "One Time Token"},
              {"no": 6, "name": "Request", "description": "A process for merchant to send a data as a parameter that merchant need to pass"},
              {"no": 7, "name": "Response", "description": "Return information or data after the process has completed"},
              {"no": 8, "name": "Sequence", "description": "A diagram represent the flow or scenario of each use case"},
              {"no": 9, "name": "URL", "description": "Uniform Resource Locator"},
              {"no": 10, "name": "Use Case", "description": "A diagram represent the interaction between user and system, focusing on \"what\" system does"},
              {"no": 11, "name": "VA", "description": "Virtual Account"}
            ]
          }
        },
        "2_payment_gateway_plugin_service": {
          "2.1_overview": {
            "text": "This service is introduces DANA as a payment gateway. It provides a plugin with page view and checkout URL for integration into merchant's platform. DANA will create and process the transaction or order for the merchant's. For detailed information will be described in the next part.",
            "api_endpoints": [
              {"no": 1, "api_name": "Payment Redirect", "description": "This API is used for merchant to create orders in DANA side and create redirect URL."},
              {"no": 2, "api_name": "Finish Notify", "description": "This API is used to notify order payment status and information from DANA to merchant's platform"}
            ]
          },
          "2.2_flow_process": {
            "2.2.1_use_case_diagram": {
              "figure": "Figure 2-1 Global Process of Payment Gateway Plugin - Service"
            },
            "2.2.2_sequence_diagram": {
              "2.2.2.1_payment": {
                "figure": "Figure 2-2 Technical Detail of Payment Process",
                "description_table": [
                  {"no": 1, "process_name": "Select product to checkout", "api_related": "-", "description": "User selects product and checkout to payment"},
                  {"no": 2, "process_name": "Create order", "api_related": "-", "description": "Merchant needs to create order (in merchant's web)"},
                  {"no": 3, "process_name": "Invoke Payment Redirect API", "api_related": "Payment Redirect", "description": "Merchant hits Payment Redirect API to DANA"},
                  {"no": 4, "process_name": "Create the order", "api_related": "-", "description": "DANA needs to create the order"},
                  {"no": 5, "process_name": "Return redirect checkout URL", "api_related": "Payment Redirect", "description": "DANA returns the checkout URL to merchant"},
                  {"no": 6, "process_name": "Open redirect checkout URL", "api_related": "Payment Redirect", "description": "Merchant opens the checkout URL before sends to user"},
                  {"no": 7, "process_name": "Show DANA checkout page", "api_related": "-", "description": "Merchant shows DANA checkout page to user by providing the payment method information"},
                  {"no": 8, "process_name": "Choose payment method", "api_related": "-", "description": "User selects one of available payment method"},
                  {"no": 9, "process_name": "Do payment", "api_related": "-", "description": "User does payment to continue the order process"},
                  {"no": 10, "process_name": "Process the payment", "api_related": "-", "description": "DANA processes the payment"},
                  {"no": 11, "process_name": "Send notify to merchant", "api_related": "Finish Notify", "description": "DANA notifies the merchant about the payment status of the order by hitting Finish Notify API"},
                  {"no": 12, "process_name": "Show payment result", "api_related": "-", "description": "Merchant shows payment result to user whether payment status has been accepted or not"}
                ]
              }
            }
          },
          "2.3_ui_flow": {
            "2.3.1_va_flow": {
              "figure": "Figure 2-3 UI Flow - VA Flow",
              "description_table": [
                {"no": 1, "ui_example": "User selects product and checkout to payment", "description": "User selects product and checkout to payment"},
                {"no": 2, "ui_example": "[Incomplete due to OCR data]", "description": "[Incomplete due to OCR data]"},
                {"no": 3, "ui_example": "Konfirmasi Pembayaran", "description": "[Incomplete due to OCR data]"},
                {"no": 4, "ui_example": "[Incomplete due to OCR data]", "description": "[Incomplete due to OCR data]"},
                {"no": 5, "ui_example": "[Incomplete due to OCR data]", "description": "[Incomplete due to OCR data]"},
                {"no": 6, "ui_example": "[Incomplete due to OCR data]", "description": "[Incomplete due to OCR data]"}
              ]
            }
          },
          "2.4_data_model": {
            "data_model_list": [
              {"no": 1, "name": "Money", "description": "This data model is used to define all parameters which relate to value and currency", "api_related": ["Payment Redirect", "Finish Notify"]},
              {"no": 2, "name": "urlParams", "description": "This data model is used to store detail information about URL", "api_related": ["Payment Redirect"]}
            ],
            "2.4.1_money": {
              "table": [
                {"no": 1, "name": "value", "type": "String", "length": "Variable, 19 max", "required": "Mandatory", "condition": "", "remarks": "Value of amount. Following ISO-4217, for IDR the value includes 2 decimal digits separated with point e.g., IDR 10.000,- will be placed with 10000.00"},
                {"no": 2, "name": "currency", "type": "String", "length": "Variable, 3 max", "required": "Mandatory", "condition": "-", "remarks": "Currency"}
              ]
            },
            "2.4.2_urlparams": {
              "table": [
                {"no": 1, "name": "url", "type": "String", "length": "Variable, 512 max", "required": "Mandatory", "condition": "-", "remarks": "URL link"},
                {"no": 2, "name": "type", "type": "String", "length": "Variable, 32 max", "required": "Mandatory", "condition": "-", "remarks": "URL type with values: NOTIFICATION (When finish payment, DANA will notify to the URL that has been defined by partner), PAY_RETURN (After the payment, the user will be redirected to merchant page, this is mandatory)"},
                {"no": 3, "name": "isDeeplink", "type": "String", "length": "Fixed, 1 max", "required": "Mandatory", "condition": "-", "remarks": "Deeplink URL or not"}
              ]
            }
          },
          "2.5_enum": {
            "enum_list": [
              {"no": 1, "name": "Merchant Category Code", "description": "This enum is used to define all of merchant category code", "api_related": ["Payment Redirect"]},
              {"no": 2, "name": "OrderTerminalTypeEnum", "description": "This enum is used to define all types of order terminal", "api_related": ["Payment Redirect"]},
              {"no": 3, "name": "PayMethodEnum", "description": "This enum is used to define all name of payment method", "api_related": ["Finish Notify"]},
              {"no": 4, "name": "ScenarioEnum", "description": "This enum is used to define all name of scenario order", "api_related": ["Payment Redirect"]},
              {"no": 5, "name": "SourcePlatformEnum", "description": "This enum is used to define all data about source of platform", "api_related": ["Payment Redirect"]},
              {"no": 6, "name": "TerminalTypeEnum", "description": "This enum is used to define all types of terminal", "api_related": ["Payment Redirect"]}
            ],
            "2.5.1_orderterminaltypeenum": {
              "table": [
                {"no": 1, "name": "APP", "type": "String", "remarks": "Mobile Application"},
                {"no": 2, "name": "WEB", "type": "String", "remarks": "Browser Web"},
                {"no": 3, "name": "WAP", "type": "String", "remarks": "Mobile Wap"},
                {"no": 4, "name": "SYSTEM", "type": "String", "remarks": "System Call"}
              ]
            },
            "2.5.2_paymethodenum": {
              "table": [
                {"no": 1, "name": "BALANCE", "type": "String", "remarks": "Payment method with balance"},
                {"no": 2, "name": "COUPON", "type": "String", "remarks": "Payment method with coupon"},
                {"no": 3, "name": "NET_BANKING", "type": "String", "remarks": "Payment method with internet banking"},
                {"no": 4, "name": "CREDIT_CARD", "type": "String", "remarks": "Payment method with credit card"},
                {"no": 5, "name": "DEBIT_CARD", "type": "String", "remarks": "Payment method with debit card"},
                {"no": 6, "name": "VIRTUAL_ACCOUNT", "type": "String", "remarks": "Payment method with virtual account"},
                {"no": 7, "name": "OTC", "type": "String", "remarks": "Payment method with OTC"},
                {"no": 8, "name": "DIRECT_DEBIT periodically", "type": "String", "remarks": "Payment method with direct debit of credit card"},
                {"no": 9, "name": "DIRECT_DEBIT_DEBIT_CARD", "type": "String", "remarks": "Payment method with direct debit of debit card"},
                {"no": 10, "name": "ONLINE periodically", "type": "String", "remarks": "Payment method with online credit"},
                {"no": 11, "name": "LOAN NAME IT", "type": "String", "remarks": "Payment method with DANA Civil"},
                {"no": 12, "name": "EWALLET", "type": "String", "remarks": "Payment method with e-wallet"}
              ]
            },
            "2.5.3_scenarioenum": {
              "table": [
                {"no": 1, "name": "REDIRECTION", "type": "String", "remarks": "Merchant will be redirected to DANA checkout page"},
                {"no": 2, "name": "API", "type": "String", "remarks": "Merchant can implement own user interface"}
              ]
            },
            "2.5.4_sourceplatformenum": {
              "table": [
                {"no": 1, "name": "IPG", "type": "String", "remarks": "The source platform is independent payment gateway"}
              ]
            },
            "2.5.5_terminaltypeenum": {
              "table": [
                {"no": 1, "name": "APP", "type": "String", "remarks": "Mobile Application"},
                {"no": 2, "name": "WEB", "type": "String", "remarks": "Browser Web"},
                {"no": 3, "name": "WAP", "type": "String", "remarks": "Mobile Wap"},
                {"no": 4, "name": "SYSTEM", "type": "String", "remarks": "System Call"}
              ]
            }
          },
          "2.6_signature_generation_validation": {
            "2.6.1_symmetric_with_b2b_access_token": {
              "method": "HMAC_SHA512",
              "2.6.1.1_digital_signature_generation": {
                "apply_token_b2b_signature": [
                  "Compose the string to sign: <X-CLIENT-KEY> + \"|\" + <X-TIMESTAMP>",
                  "The signature string is generated from string to sign above with applying SHA-256 with RSA2048 encryption using pkcs8 private key, and then encode the result to base64.",
                  "Put the signature string into HTTP header \"X-SIGNATURE\" when call API for applying B2B access token."
                ],
                "transaction_signature": [
                  "Compose the string to sign: <HTTP METHOD> + \":\" + <RELATIVE PATH URL> + \":\" + <B2B ACCESS TOKEN> + \":\" + LowerCase(HexEncode(SHA-256(Minify(<HTTP BODY>)))) + \":\" + <X-TIMESTAMP>",
                  "The signature string is generated from string to sign above with applying HMAC_SHA512 hashing using secret key which given by DANA, and then encode the result to base64.",
                  "Put the signature string into HTTP header \"X-SIGNATURE\" when call DANA's API."
                ]
              },
              "2.6.1.2_digital_signature_validation": {
                "apply_token_b2b_signature": [
                  "Take the signature from HTTP header \"X-SIGNATURE\".",
                  "Decrypt the signature using public key which is pair with private key that used to generate the signature.",
                  "Verify the correctness of the signature based on SHA-256 with RSA-2048 encryption signing against the string to sign.",
                  "If the verification is correct, then consume the message."
                ],
                "transaction_signature": [
                  "Compose the string to sign: <HTTP METHOD> + \":\" + <RELATIVE PATH URL> + \":\" + <B2B ACCESS TOKEN> + \":\" + LowerCase(HexEncode(SHA-256(Minify(<HTTP BODY>)))) + \":\" + <X-TIMESTAMP>",
                  "Generate the signature from string to sign above with applying HMAC_SHA512 hashing using secret key which given by DANA, and then encode the result to base64.",
                  "Take the signature from HTTP header \"X-SIGNATURE\".",
                  "Compare the value between X-SIGNATURE and the generated signature, if those value are the same, then consume the message."
                ]
              }
            },
            "2.6.2_asymmetric_without_access_token": {
              "method": "SHA256withRSA",
              "2.6.2.1_asymmetric_key_generation": [
                "Create Private Key: openssl genrsa -out rsa_private_key.pem 2048",
                "Export Public Key: openssl rsa -in rsa_private_key.pem -out rsa_public_key.pem -pubout",
                "Private Key to PKCS#8 Encode: openssl pkcs8 -topk8 -in rsa_private_key.pem -out pkcs8_rsa_private_key.pem -nocrypt",
                "Partner should generate the signature with pkcs8_rsa_private_key.pem and DANA will use rsa_public_key.pem to validate the signature and vice versa."
              ],
              "2.6.2.2_digital_signature_generation": [
                "Compose the string to sign: Apply token: <X-CLIENT-KEY> + \"|\" + <X-TIMESTAMP>, Transactional: <HTTP METHOD> + \":\" + <RELATIVE PATH URL> + \":\" + LowerCase(HexEncode(SHA-256(Minify(<HTTP BODY>)))) + \":\" + <X-TIMESTAMP>",
                "The signature string is generated from string to sign above with applying SHA-256 with RSA2048 encryption using pkcs8 private key, and then encode the result to base64.",
                "Put the signature string into HTTP header \"X-SIGNATURE\".",
                "Example: X-SIGNATURE: 85be817c55b2c135157c7e89f52499bf0c25ad6eebe04a986e8c862561b19a5"
              ],
              "2.6.2.3_digital_signature_validation": [
                "Take the signature from HTTP header \"X-SIGNATURE\".",
                "Decrypt the signature using public key which is pair with private key that used to generate the signature.",
                "Verify the correctness of the signature based on SHA-256 with RSA-2048 encryption signing against the string to sign.",
                "If the verification is correct, then consume the message."
              ]
            }
          },
          "2.7_settlement": {
            "text": "Settlement file is used to give merchant detailed information about each transaction that affects funds settlement to their accounts. This service uses settlement file, namely: Payment Services Settlement. For the detail specification, refer to this document: Payment Services Settlement File Specification."
          }
        },
        "3_payment_redirect": {
          "3.1_specification": {
            "table": {
              "api_name": "paymentRedirect",
              "function": "This API is used for merchant to create orders in DANA side and to create redirect URL",
              "service_code": "00",
              "method": "POST",
              "url": "/v1.0/payment-gateway/payment.htm",
              "accept": "application/json",
              "content_type": "application/json",
              "related_service": "Payment Gateway Plugin",
              "expected_timeout": "8 second"
            }
          },
          "3.2_idempotent_key_and_rule": {
            "rules": [
              "Idempotent is controlled by Idempotent Key (merchantId + partnerReferenceNo)",
              "If Idempotent Key has been created and the key information is consistent, then Response Code 2000000 (success) will be returned.",
              "If Idempotent Key has been created but the key information isn't consistent, then Response code 4040018 (inconsistent request) will be returned."
            ]
          },
          "3.3_request": {
            "3.3.1_request_parameter": {
              "3.3.1.1_header": {
                "table": [
                  {"parameter": "Content-Type", "type": "String", "length": "Variable, 127 max", "required": "Mandatory", "condition": "", "remarks": "Content type, value always application/json"},
                  {"parameter": "Authorization", "type": "String", "length": "Variable, 2048 max", "required": "Conditional", "condition": "Y = Signature option is symmetric approach", "remarks": "Contains bearer JWT token, which has been obtained from Authorization Token Request API"},
                  {"parameter": "X-TIMESTAMP", "type": "String", "length": "Fixed, 25 max", "required": "Mandatory", "condition": "", "remarks": "Transaction date time, in format YYYY-MM-DDTHH:mm:ss+07:00. Time must be in GMT+7 (Jakarta time)"},
                  {"parameter": "X-SIGNATURE", "type": "String", "length": "Variable", "required": "Mandatory", "condition": "", "remarks": "Signature need to be generated with symmetricSignature or asymmetricSignature method"},
                  {"parameter": "ORIGIN", "type": "String", "length": "Variable", "required": "Optional", "condition": "-", "remarks": "Origin domain"},
                  {"parameter": "X-PARTNER-ID", "type": "String", "length": "Variable, 36 max", "required": "Mandatory", "condition": "", "remarks": "Unique identifier for partner was generated by DANA, or known as clientId"},
                  {"parameter": "X-EXTERNAL-ID", "type": "String", "length": "Variable, 36 max", "required": "Mandatory", "condition": "", "remarks": "Unique messaging reference identifier generated by merchant and should be unique within the same day"},
                  {"parameter": "CHANNEL-ID", "type": "String", "length": "Variable, 5 max", "required": "Mandatory", "condition": "", "remarks": "Device identification on which the API services is currently being accessed by the end user (customer)"}
                ]
              },
              "3.3.1.2_body": {
                "table": [
                  {"parameter": "partnerReferenceNo", "type": "String", "length": "Variable, 64 max", "required": "Mandatory", "condition": "-", "remarks": "Transaction identifier on partner system"},
                  {"parameter": "merchantId", "type": "String", "length": "Variable, 64 max", "required": "Mandatory", "condition": "-", "remarks": "Merchant identifier that is unique per each merchant"},
                  {"parameter": "subMerchantId", "type": "String", "length": "Variable, 32 max", "required": "Optional", "condition": "-", "remarks": "Information of sub merchant identifier"},
                  {"parameter": "amount", "type": "Money", "length": "Variable", "required": "Mandatory", "condition": "", "remarks": "Amount. Contains two sub-fields: 1. Value: Transaction amount, including the cents 2. Currency: Currency code based on ISO"},
                  {"parameter": "externalStoreId", "type": "String", "length": "Variable, 64 max", "required": "Optional", "condition": "-", "remarks": "Store identifier to indicate to which store this payment belongs to"},
                  {"parameter": "validUpTo", "type": "String", "length": "Fixed, 25 max", "required": "Optional", "condition": "", "remarks": "The time when the payment will be automatically expired, in format YYYY-MM-DDTHH:mm:ss+07:00. Time must be in GMT+7 (Jakarta time)"}
                ],
                "additionalinfo_order_goods": {
                  "table": [
                    {"parameter": "unit", "type": "String", "length": "Variable, 64 max", "required": "Optional", "condition": "-", "remarks": "Goods unit"},
                    {"parameter": "category", "type": "String", "length": "Variable, 64 max", "required": "Mandatory", "condition": "-", "remarks": "Goods category"},
                    {"parameter": "price", "type": "Money", "length": "Variable", "required": "Mandatory", "condition": "-", "remarks": "Goods price. Contains two sub-fields: 1. Value: Amount 2. Currency: Currency code based on ISO"},
                    {"parameter": "merchantShippingId", "type": "String", "length": "Variable, 64 max", "required": "Optional", "condition": "-", "remarks": "Shipment identifier provided by merchant"},
                    {"parameter": "merchantGoodsId", "type": "String", "length": "Variable, 64 max", "required": "Mandatory", "condition": "-", "remarks": "Goods identifier provided by merchant"},
                    {"parameter": "description", "type": "String", "length": "Variable, 1024 max", "required": "Mandatory", "condition": "-", "remarks": "Goods description"},
                    {"parameter": "snapshotUrl", "type": "String", "length": "Variable, 512 max", "required": "Optional", "condition": "-", "remarks": "The URL of good's snapshot web page"},
                    {"parameter": "quantity", "type": "String", "length": "Variable, 16 max", "required": "Mandatory", "condition": "-", "remarks": "Count of items"},
                    {"parameter": "extendInfo", "type": "String", "length": "Variable, 4096 max", "required": "Optional", "condition": "-", "remarks": "Extend information"}
                  ]
                },
                "additionalinfo_order_buyer": {
                  "table": [
                    {"parameter": "externalUserType", "type": "String", "length": "Variable, 32 max", "required": "Conditional", "condition": "Y = externalUserId is filled", "remarks": "Type of external user"},
                    {"parameter": "nickname", "type": "String", "length": "Variable, 64 max", "required": "Optional", "condition": "-", "remarks": "Nickname, user's nick name in DANA's"},
                    {"parameter": "externalUserId", "type": "String", "length": "Variable, 32 max", "required": "Conditional", "condition": "Y = externalUserType is filled", "remarks": "External user identifier"},
                    {"parameter": "userId", "type": "String", "length": "Variable, 32 max", "required": "Optional", "condition": "-", "remarks": "DANA's user identifier"}
                  ]
                },
                "order_shippinginfo": {
                  "table": [
                    {"parameter": "chargeAmount", "type": "Money", "length": "Variable", "required": "Optional", "condition": "-", "remarks": "Charge amount. Contains two sub-fields: 1. Value: Amount, including the cents 2. Currency: Currency code based on ISO"},
                    {"parameter": "lastName", "type": "String", "length": "Variable, 64 max", "required": "Mandatory", "condition": "-", "remarks": "Last name"},
                    {"parameter": "trackingNo", "type": "String", "length": "Variable, 64 max", "required": "Optional", "condition": "-", "remarks": "Number of tracking"},
                    {"parameter": "countryName", "type": "String", "length": "Variable, 64 max", "required": "Mandatory", "condition": "-", "remarks": "Name of country"},
                    {"parameter": "merchantShippingId", "type": "String", "length": "Variable, 64 max", "required": "Mandatory", "condition": "-", "remarks": "Merchant shipping identifier"},
                    {"parameter": "cityName", "type": "String", "length": "Variable, 64 max", "required": "Mandatory", "condition": "-", "remarks": "Name of city"},
                    {"parameter": "address1", "type": "String", "length": "Variable, 256 max", "required": "Mandatory", "condition": "-", "remarks": "Information of address 1"},
                    {"parameter": "address2", "type": "String", "length": "Variable, 256 max", "required": "Optional", "condition": "-", "remarks": "Information of address 2"},
                    {"parameter": "phoneNo", "type": "String", "length": "Variable, 32 max", "required": "Optional", "condition": "-", "remarks": "Phone number"},
                    {"parameter": "areaName", "type": "String", "length": "Variable, 64 max", "required": "Optional", "condition": "-", "remarks": "Name of area"},
                    {"parameter": "email", "type": "String", "length": "Variable, 128 max", "required": "Optional", "condition": "-", "remarks": "Email"},
                    {"parameter": "zipCode", "type": "String", "length": "Variable, 32 max", "required": "Mandatory", "condition": "-", "remarks": "Zip code"},
                    {"parameter": "stateName", "type": "String", "length": "Variable, 64 max", "required": "Mandatory", "condition": "-", "remarks": "Name of state"},
                    {"parameter": "faxNo", "type": "String", "length": "Variable, 32 max", "required": "Optional", "condition": "-", "remarks": "Fax number"},
                    {"parameter": "carrier", "type": "String", "length": "Variable, 64 max", "required": "Optional", "condition": "-", "remarks": "Information of carrier"},
                    {"parameter": "firstName", "type": "String", "length": "Variable, 64 max", "required": "Mandatory", "condition": "-", "remarks": "First name"},
                    {"parameter": "mobileNo", "type": "String", "length": "Variable, 32 max", "required": "Optional", "condition": "-", "remarks": "Mobile number"}
                  ]
                },
                "envinfo": {
                  "table": [
                    {"parameter": "sessionId", "type": "String", "length": "Variable, 128 max", "required": "Optional", "condition": "-", "remarks": "Session identifier"},
                    {"parameter": "tokenId", "type": "String", "length": "Variable, 128 max", "required": "Optional", "condition": "-", "remarks": "Token identifier"},
                    {"parameter": "websiteLanguage", "type": "String", "length": "Variable, 16 max", "required": "Optional", "condition": "-", "remarks": "Website dólanguage"},
                    {"parameter": "clientIp", "type": "String", "length": "Variable, 32 max", "required": "Optional", "condition": "-", "remarks": "Client IP address"},
                    {"parameter": "osType", "type": "String", "length": "Variable, 128 max", "required": "Optional", "condition": "-", "remarks": "Operating system type"},
                    {"parameter": "appVersion", "type": "String", "length": "Variable, 128 max", "required": "Optional", "condition": "-", "remarks": "App version"},
                    {"parameter": "sdkVersion", "type": "String", "length": "Variable, 128 max", "required": "Optional", "condition": "-", "remarks": "SDK version"},
                    {"parameter": "sourcePlatform", "type": "String", "length": "Variable, 32 max", "required": "Mandatory", "condition": "-", "remarks": "Source platform, refer to SourcePlatformEnum"},
                    {"parameter": "clientKey", "type": "String", "length": "Variable, 64 max", "required": "Optional", "condition": "-", "remarks": "Unique identifier for partner was generated by DANA"},
                    {"parameter": "orderTerminalType", "type": "String", "length": "Variable, 32 max", "required": "Mandatory", "condition": "-", "remarks": "Order terminal type, refer to OrderTerminalTypeEnum"},
                    {"parameter": "terminalType", "type": "String", "length": "Variable, 32 max", "required": "Mandatory", "condition": "-", "remarks": "Terminal type, refer to TerminalTypeEnum"},
                    {"parameter": "orderOsType", "type": "String", "length": "Variable, 128 max", "required": "Optional", "condition": "-", "remarks": "Order operating system type"},
                    {"parameter": "merchantAppVersion", "type": "String", "length": "Variable, 128 max", "required": "Optional", "condition": "-", "remarks": "Merchant App version"},
                    {"parameter": "extendInfo", "type": "String", "length": "Variable, 4096 max", "required": "Optional", "condition": "-", "remarks": "Extend information"}
                  ]
                }
              }
            },
            "3.3.2_request_sample": {
              "script": {
                "method": "POST",
                "url": ".../v1.0/payment-gateway/payment.htm",
                "headers": {
                  "Content-Type": "application/json",
                  "Authorization": "Bearer gp9HjjEj813Y9JGoqwOeOPWbnt4CUpvIJbU1mMU4a11MNDZ75g5u9a",
                  "X-TIMESTAMP": "2024-12-23T09:10:11+07:00",
                  "X-SIGNATURE": "85be817c55b2c135157c7e89f52499bf0c25ad6eebe04a986e8c862561b19a5",
                  "ORIGIN": "www.hostname.com",
                  "X-PARTNER-ID": "82150823919040624621823174737537",
                  "X-EXTERNAL-ID": "41807553358950893184162180797837",
                  "CHANNEL-ID": "95221"
                },
                "body": {
                  "partnerReferenceNo": "202010290000000000001",
                  "merchantId": "23489182303312",
                  "subMerchantId": "310928924949487",
                  "amount": {
                    "value": "12345678.00",
                    "currency": "IDR"
                  },
                  "externalStoreId": "239840198240795109",
                  "validUpTo": "2020-12-23T07:44:11+07:00",
                  "disabledPayMethods": "CREDIT_CARD",
                  "urlParams": [
                    {
                      "url": "https://test.bi.go.id/v1/test",
                      "type": "PAY_RETURN",
                      "isDeeplink": "Y"
                    },
                    {
                      "url": "https://test.bi.go.id/v1/test",
                      "type": "NOTIFICATION",
                      "isDeepLink": "Y"
                    }
                  ],
                  "additionalInfo": {
                    "order": {
                      "merchantTransType": "type",
                      "orderTitle": "Payment Gateway Order",
                      "scenario": "REDIRECTION",
                      "goods": [
                        {
                          "unit": "Kg",
                          "category": "travelling/subway",
                          "price": {
                            "value": "10.00",
                            "currency": "IDR"
                          },
                          "merchantShippingId": "564314314574327545",
                          "merchantGoodsId": "24525635625623",
                          "description": "Women Summer Dress New White Lace Sleeveless Cute Casual Summer Dresses",
                          "snapshotUrl": "http://snap.url.com",
                          "quantity": ""
                        }
                      ]
                    },
                    "shippingInfo": [
                      {
                        "chargeAmount": {
                          "value": "20.00",
                          "currency": "IDR"
                        },
                        "lastName": "Li",
                        "trackingNo": "646431431322332133",
                        "countryName": "JP",
                        "merchantShippingId": "564314314574327545",
                        "cityName": "Atlanta",
                        "address1": "137 W San Bernardino",
                        "address2": "4114 Sepulveda",
                        "phoneNo": "2423-2322342",
                        "areaName": "Rd",
                        "email": "abc@gmail.com",
                        "zipCode": "310001",
                        "stateName": "GA",
                        "faxNo": "2123-11113",
                        "carrier": "Federal Express",
                        "firstName": "Jim",
                        "mobileNo": "13765443223"
                      }
                    ],
                    "extendInfo": ""
                  },
                  "mcc": "5732",
                  "envInfo": {
                    "sessionId": "8EU6mL15mUpUBgyRFT4v7DjfQ3fcauthcenter",
                    "tokenId": "a8d359d6-ca3d-4048-9295-bbea5f6715a6",
                    "websiteLanguage": "en_US",
                    "clientIp": "10.15.8.189",
                    "osType": "Windows.PC",
                    "appVersion": "1.0",
                    "sdkVersion": "1.0",
                    "sourcePlatform": "IPG",
                    "orderOsType": "IOS",
                    "merchantAppVersion": "1.0",
                    "terminalType": "SYSTEM",
                    "orderTerminalType": "WEB",
                    "extendInfo": "{\"deviceId\":\"CV19A56370e8a00d54293aab8001e4794\"}"
                  },
                  "extendInfo": "{\"key\":\"value\"}"
                }
              }
            }
          },
          "3.4_response": {
            "3.4.1_response_parameter": {
              "3.4.1.1_header": {
                "table": [
                  {"parameter": "Content-Type", "type": "String", "length": "Variable, 127 max", "required": "Mandatory", "condition": "-", "remarks": "Content type, value always application/json"},
                  {"parameter": "X-TIMESTAMP", "type": "String", "length": "Fixed, 25 max", "required": "Mandatory", "condition": "-", "remarks": "Transaction date time, in format YYYY-MM-DDTHH:mm:ss+07:00. Time must be in GMT+7 (Jakarta time)"}
                ]
              },
              "3.4.1.2_body": {
                "table": [
                  {"parameter": "responseCode", "type": "String", "length": "Fixed, 7 max", "required": "Mandatory", "condition": "-", "remarks": "Refer to response code list"},
                  {"parameter": "responseMessage", "type": "String", "length": "Variable, 150 max", "required": "Mandatory", "condition": "-", "remarks": "Refer to response code list"},
                  {"parameter": "referenceNo", "type": "String", "length": "Variable, 64 max", "required": "Conditional", "condition": "Y = Successfully processed", "remarks": "Transaction identifier on DANA system"},
                  {"parameter": "partnerReferenceNo", "type": "String", "length": "Variable, 64 max", "required": "Mandatory", "condition": "-", "remarks": "Transaction identifier on partner system"},
                  {"parameter": "webRedirectUrl", "type": "String", "length": "Variable, 2048 max", "required": "Conditional", "condition": "Y = Successfully processed", "remarks": "Checkout URLs"}
                ]
              }
            },
            "3.4.2_response_sample": {
              "script": {
                "headers": {
                  "Content-Type": "application/json",
                  "X-TIMESTAMP": "2024-12-23T09:10:11+07:00"
                },
                "body": {
                  "responseCode": "2000000",
                  "responseMessage": "Successful",
                  "referenceNo": "20201029777770000000000",
                  "partnerReferenceNo": "202010290000000000000",
                  "webRedirectUrl": "https://pjsp.com/universal?bi2No=REF993883&..."
                }
              }
            }
          },
          "3.5_response_code_and_message": {
            "table": "[Incomplete due to OCR data]"
          }
        },
        "4_finish_notify": {
          "4.1_specification": {
            "table": {
              "api_name": "finishNotify",
              "function": "This API is used to notify order payment status and information from DANA to merchant's platform",
              "service_code": "56",
              "method": "POST",
              "url": "/v1.0/debit/notify",
              "accept": "application/json",
              "content_type": "application/json",
              "related_service": "Payment Gateway Plugin",
              "expected_timeout": "8 second"
            }
          },
          "4.2_request": {
            "4.2.1_request_parameter": {
              "4.2.1.1_header": {
                "table": [
                  {"parameter": "Content-Type", "type": "String", "length": "Variable, 127 max", "required": "Mandatory", "condition": "", "remarks": "Content type, value always application/json"},
                  {"parameter": "Authorization", "type": "String", "length": "Variable, 2048 max", "required": "Conditional", "condition": "Y = Signature option is symmetric approach", "remarks": "Contains bearer JWT token, which has been obtained from Authorization Token Request API"},
                  {"parameter": "X-TIMESTAMP", "type": "String", "length": "Fixed, 25 max", "required": "Mandatory", "condition": "", "remarks": "Transaction date time, in format YYYY-MM-DDTHH:mm:ss+07:00. Time must be in GMT+7 (Jakarta time)"},
                  {"parameter": "X-SIGNATURE", "type": "String", "length": "Variable", "required": "Mandatory", "condition": "", "remarks": "Signature need to be generated with symmetricSignature or asymmetricSignature method"},
                  {"parameter": "ORIGIN", "type": "String", "length": "Variable", "required": "Optional", "condition": "-", "remarks": "Origin domain"},
                  {"parameter": "X-PARTNER-ID", "type": "String", "length": "Variable, 36 max", "required": "Mandatory", "condition": "", "remarks": "Unique identifier for partner was generated by DANA, or known as clientId"},
                  {"parameter": "X-EXTERNAL-ID", "type": "String", "length": "Variable, 36 max", "required": "Mandatory", "condition": "", "remarks": "Unique messaging reference identifier generated by merchant and should be unique within the same day"},
                  {"parameter": "CHANNEL-ID", "type": "String", "length": "Variable, 5 max", "required": "Mandatory", "condition": "", "remarks": "Device identification on which the API services is currently being accessed by the end user (customer)"}
                ]
              },
              "4.2.1.2_body": {
                "table": [
                  {"parameter": "originalPartnerReferenceNo", "type": "String", "length": "Variable, 64 max", "required": "Mandatory", "condition": "-", "remarks": "Original transaction identifier on DANA system"},
                  {"parameter": "originalReferenceNo", "type": "String", "length": "Variable, 64 max", "required": "Mandatory", "condition": "-", "remarks": "Original transaction identifier on partner system"},
                  {"parameter": "originalExternalId", "type": "String", "length": "Variable, 36 max", "required": "Optional", "condition": "-", "remarks": "Original external identifier on header message"},
                  {"parameter": "merchantId", "type": "String", "length": "Variable, 64 max", "required": "Mandatory", "condition": "-", "remarks": "Merchant identifier that is unique per each merchant"},
                  {"parameter": "subMerchantId", "type": "String", "length": "Variable, 32 max", "required": "Optional", "condition": "-", "remarks": "Information of sub merchant identifier"},
                  {"parameter": "amount", "type": "Money", "length": "Variable", "required": "Mandatory", "condition": "-", "remarks": "Amount. Contains two sub-fields: 1. Value: Transaction amount, including the cents 2. Currency: Currency code based on ISO"},
                  {"parameter": "latestTransactionStatus", "type": "String", "length": "Fixed, 2 max", "required": "Mandatory", "condition": "-", "remarks": "Category code for the status of the transaction. The values include: 00 = Success, the order has been paid, 05 = Cancelled, the order has been closed because it is expired"},
                  {"parameter": "transactionStatusDesc", "type": "String", "length": "Variable, 50 max", "required": "Optional", "condition": "-", "remarks": "Description of transaction status"},
                  {"parameter": "createdTime", "type": "String", "length": "Fixed, 25 max", "required": "Mandatory", "condition": "-", "remarks": "Transaction created time, in format YYYY-MM-DDTHH:mm:ss+07:00. Time must be in GMT+7 (Jakarta time)"},
                  {"parameter": "finishedTime", "type": "String", "length": "Fixed, 25 max", "required": "Mandatory", "condition": "-", "remarks": "Transaction finished time, in format YYYY-MM-DDTHH:mm:ss+07:00. Time must be in GMT+7 (Jakarta time)"},
                  {"parameter": "externalStoreId", "type": "String", "length": "Variable, 64 max", "required": "Optional", "condition": "-", "remarks": "Store identifier to indicate to which store this payment belongs to"},
                  {"parameter": "additionalInfo", "type": "JSON Object", "length": "Variable", "required": "Optional", "condition": "-", "remarks": "Additional information"},
                  {"parameter": "additionalInfo.paymentInfo", "type": "JSON Object", "length": "Variable", "required": "Optional", "condition": "-", "remarks": "Additional information of payment"},
                  {"parameter": "additionalInfo.shopInfo", "type": "JSON Object", "length": "Variable", "required": "Optional", "condition": "-", "remarks": "Additional information of shop"},
                  {"parameter": "additionalInfo.extendInfo", "type": "String", "length": "Variable, 4096 max", "required": "Optional", "condition": "-", "remarks": "Additional information of extend"}
                ],
                "additionalinfo_paymentinfo": {
                  "table": [
                    {"parameter": "cashierRequestId", "type": "String", "length": "Variable, 64 max", "required": "Mandatory", "condition": "-", "remarks": "Cashier request identifier"},
                    {"parameter": "paidTime", "type": "String", "length": "Fixed, 25 max", "required": "Mandatory", "condition": "-", "remarks": "Information of paid time, in format YYYY-MM-DDTHH:mm:ss+07:00. Time must be in GMT+7 (Jakarta time)"},
                    {"parameter": "payOptionInfos", "type": "Array of JSON Object", "length": "Variable", "required": "Mandatory", "condition": "-", "remarks": "Information of pay option. Refer to payOptionInfos for the detailed"},
                    {"parameter": "payRequestExtendInfo", "type": "String", "length": "Variable, 4096 max", "required": "Optional", "condition": "-", "remarks": "Extend information of pay request"},
                    {"parameter": "extendInfo", "type": "String", "length": "Variable, 4096 max", "required": "Optional", "condition": "-", "remarks": "Extend information"}
                  ]
                },
                "payoptioninfos": {
                  "table": [
                    {"parameter": "payMethod", "type": "String", "length": "Variable, 64 max", "required": "Mandatory", "condition": "-", "remarks": "Payment method name, refer to PayMethodEnum"},
                    {"parameter": "payAmount", "type": "Money", "length": "Variable", "required": "Mandatory", "condition": "-", "remarks": "Pay amount. Contains two sub-fields: 1. Value: Amount, including the cents 2. Currency: Currency code based on ISO"},
                    {"parameter": "transAmount", "type": "Money", "length": "Variable", "required": "Mandatory", "condition": "-", "remarks": "Trans amount. Contains two sub-fields: 1. Value: Amount, including the cents 2. Currency: Currency code based on ISO"}
                  ]
                }
              }
            },
            "4.2.2_request_sample": {
              "script": {
                "method": "POST",
                "url": ".../v1.0/debit/notify",
                "protocol": "HTTP/1.2",
                "headers": {
                  "Content-Type": "application/json",
                  "Authorization": "Bearer gp9HjjEj813Y9JGoQwOeOPWbnt4CUpvIJbU1mMU4al1MNDZ7Sg5u9a",
                  "X-TIMESTAMP": "2020-12-23T07:44:11+07:00",
                  "X-SIGNATURE": "85be817c55b2c135157c7e89f52499bf0c25ad6eebe04a986e8c862561b19a5",
                  "ORIGIN": "www.hostname.com",
                  "X-PARTNER-ID": "82150823919040624621823174737537",
                  "X-EXTERNAL-ID": "41807553358950093184162180797837",
                  "CHANNEL-ID": "95221"
                },
                "body": {
                  "originalPartnerReferenceNo": "202010290000000000001",
                  "originalReferenceNo": "2020102977770000000000",
                  "originalExternalId": "30443786930722726463280097920912",
                  "merchantId": "23489182303312",
                  "subMerchantId": "23489182303312",
                  "amount": {
                    "value": "10000.00",
                    "currency": "IDR"
                  },
                  "latestTransactionStatus": "00",
                  "transactionStatusDesc": "success",
                  "createdTime": "2020-12-21T17:07:18+07:00",
                  "finishedTime": "2020-12-21T17:07:20+07:00",
                  "externalStoreId": "91863213913112",
                  "additionalInfo": {
                    "paymentInfo": {
                      "paidTime": "2022-01-04T19:13:54+07:00",
                      "payRequestExtendInfo": "{\"key\": \"value\"}",
                      "extendInfo": "{\"topupAndPay\": \"false\", \"paymentStatus\": \"SUCCESS\"}",
                      "payOptionInfos": [
                        {
                          "payOptionBillExtendInfo": "{}",
                          "payAmount": {
                            "value": "51312.00",
                            "currency": "IDR"
                          },
                          "transAmount": {
                            "value": "0.00",
                            "currency": "IDR"
                          },
                          "payMethod": "BALANCE",
                          "extendInfo": "{\"key\":\"value\"}"
                        }
                      ],
                      "cashierRequestId": "64c4fdc544a7edff9c1e51aebc80f2eb"
                    },
                    "shopInfo": {
                      "divisionId": "21665000011111119920",
                      "externalDivisionId": "Test",
                      "externalShopId": "TEST0000001",
                      "shopAddress": "{\"key\":\"value\"}",
                      "shopId": "216660000274111177110",
                      "shopName": "Test",
                      "operatorId": "",
                      "divisionType": ""
                    },
                    "extendInfo": "{\"key\":\"value\"}"
                  }
                }
              }
            }
          },
          "4.3_response": {
            "4.3.1_response_parameter": {
              "4.3.1.1_header": {
                "table": [
                  {"parameter": "Content-Type", "type": "String", "length": "Variable, 127 max", "required": "Mandatory", "condition": "", "remarks": "Content type, value always application/json"},
                  {"parameter": "X-TIMESTAMP", "type": "String", "length": "Fixed, 25 max", "required": "Mandatory", "condition": "", "remarks": "Transaction date time, in format YYYY-MM-DDTHH:mm:ss+07:00. Time must be in GMT+7 (Jakarta time)"}
                ]
              },
              "4.3.1.2_body": {
                "table": [
                  {"parameter": "responseCode", "type": "String", "length": "Fixed, 7 max", "required": "Mandatory", "condition": "", "remarks": "Refer to response code list"},
                  {"parameter": "responseMessage", "type": "String", "length": "Variable, 150 max", "required": "Mandatory", "condition": "", "remarks": "Refer to response code list"}
                ]
              }
            },
            "4.3.2_response_sample": {
              "script": {
                "headers": {
                  "Content-Type": "application/json",
                  "X-TIMESTAMP": "2020-12-21T17:50:44+07:00"
                },
                "body": {
                  "responseCode": "2005600",
                  "responseMessage": "Successful"
                }
              }
            }
          },
          "4.4_response_code_and_message": {
            "table": [
              {"response_code": "2005600", "response_message": "Successful", "remarks": "Success to be processed", "partner_action": "Mark Finish Notify process as Success"},
              {"response_code": "5005601", "response_message": "Internal Server Error", "remarks": "Unknown internal server failure, please retry the process again", "partner_action": "Mark Finish Notify process as Pending. Retry periodically within 7 days"},
              {"response_code": "Total timeout", "response_message": "", "remarks": "Total timeout, the client side does not get any responses from the server side (Can be due to network issue, server slowing down, and so on)", "partner_action": "Do a retry maximum 3 attempts, if still fails mark Finish Notify process as Pending"},
              {"response_code": "Unexpected response (Empty field/field does not exist/undefined response code)", "response_message": "", "remarks": "The server does not produce expected responses (Can be due to hardware failure, bugs, and so on)", "partner_action": "- If the response code prefix are 202 and 5XX, mark Finish Notify process as Pending - If empty field/field does not exist, mark Finish Notify process as Pending"}
            ]
          }
        },
        "5_attachment": {
          "table": [
            {"no": 1, "document": "Merchant Category Code", "description": "The document shows the detail list of Merchant Category Code (MCC)"},
            {"no": 2, "document": "Payment Services Settlement File Specification", "description": "The document shows the detail of settlement file specification"}
          ]
        }
      }
    }
  }